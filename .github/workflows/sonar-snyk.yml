name: Example workflow for Python script scan using Snyk

on: push

jobs:
  security:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'  # Change as needed

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests  # Add any other dependencies here
          echo "requests" > requirements.txt

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/python@master
        continue-on-error: true  # Let the job continue to run for SARIF output
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: code test
          args: --sarif-file-output=snyk.sarif

      - name: Count total number of vulnerabilities
        run: |
          RESULTS_LENGTH=$(jq '.runs[0].results | length' snyk.sarif)
          echo "RESULTS_LENGTH=$RESULTS_LENGTH" >> $GITHUB_ENV
          echo "Vulnerabilities found: $RESULTS_LENGTH"

      - name: Pass or Fail the job
        run: |
          if [ "$RESULTS_LENGTH" != 0 ]; then
              echo "❌ Snyk scan failed with $RESULTS_LENGTH issues"
              exit 1
          else
              echo "✅ Snyk scan passed — no vulnerabilities found"
          fi
